---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 4
  dependsOn:
    - name: node-feature-discovery
      namespace: default
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controller:
      type: statefulset
    image:
      repository: plexinc/pms-docker
      tag: 1.30.0.6486-629d58034
    # image:
    #   repository: ghcr.io/onedr0p/plex
    #   tag: 1.30.0.6486-629d58034@sha256:b3e3a2a305443f243643553161cff639f3dcc74349595884ac9c77cf6bb24068
    env:
      TZ: "${TIMEZONE}"
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${PLEX_SVC_IP}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          external-dns.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
    #   runAsUser: 0
    #   runAsGroup: 568
    #   fsGroup: 568
    #   fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
        - 100
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        type: nfs
        server: "nfs1.${SECRET_PRIVATE_DOMAIN}"
        path: /volume1/Media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-intel-gpu
                  operator: In
                  values:
                    - "true"
    # resources:
    #   requests:
    #     gpu.intel.com/i915: 1
    #     cpu: 1000m
    #     memory: 1500Mi
    #   limits:
    #     gpu.intel.com/i915: 1
    #     memory: 4900Mi
