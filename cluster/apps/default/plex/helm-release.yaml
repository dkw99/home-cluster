---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 4
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/dkw99/plex
      tag: 1.32.4.7195-7c8f9d3b6@sha256:ec5dfaeae08f8e7965def552db64f6a59ba9665ee4dea7b06e16d29e3d0c53d3
    env:
      TZ: ${TIMEZONE}
    envFrom:
      - secretRef:
          name: plex-secret
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${SVC_PLEX_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_PUBLIC_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          hajimari.io/icon: mdi:plex
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 1041
      runAsGroup: 65541
      fsGroup: 65541
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups: [44, 109, 10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: ceph-block
    persistence:
      media:
        enabled: true
        type: nfs
        server: "NFS1.${SECRET_PRIVATE_DOMAIN}"
        path: /volume1/Media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
    nodeSelector:
      # node-role.kubernetes.io/worker: "true"
      intel.feature.node.kubernetes.io/gpu: "true"
